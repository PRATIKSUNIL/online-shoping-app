{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRATI\\\\Downloads\\\\E-Kart-main (1)\\\\E-Kart-main\\\\src\\\\components\\\\UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Header from './Header';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    currentUser,\n    updatePassword,\n    updateEmail\n  } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    // this is to prevent reload of a page as reloading of a page is the default behavior\n    e.preventDefault(); // for the confirmation of the password\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return alert(\"Passwords do not match\");\n    } //promises handles the actions given to it\n\n\n    const promises = []; //disables the 'upload button'\n\n    setLoading(true); //for the updation of the email\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    } // for the updation of the password\n\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    } //executing the promises\n\n\n    Promise.all(promises).then(() => {\n      //redirecting to homepage\n      history.push(\"/\");\n    }).catch(() => {\n      //handling the error\n      alert(\"Failed to update account\");\n    }).finally(() => {\n      //enabling the update button\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"align-items-right\",\n      style: {\n        height: '55vh',\n        width: \"50vw\",\n        marginLeft: \"25%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true,\n              defaultValue: currentUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              placeholder: \"Leave blank to keep the same\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 text-center mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateProfile, \"rXd/mRLEZt5wKEh93oZz/auY8os=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["C:/Users/PRATI/Downloads/E-Kart-main (1)/E-Kart-main/src/components/UpdateProfile.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Link","useHistory","Header","Footer","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","currentUser","updatePassword","updateEmail","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","alert","promises","email","push","Promise","all","then","catch","finally","height","width","marginLeft"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport Header from './Header'\nimport Footer from './Footer'\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword, updateEmail } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    // this is to prevent reload of a page as reloading of a page is the default behavior\n    e.preventDefault()\n      // for the confirmation of the password\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return alert(\"Passwords do not match\")\n    }\n      //promises handles the actions given to it\n    const promises = []\n    //disables the 'upload button'\n    setLoading(true)\n  \n      //for the updation of the email\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value))\n    }\n    // for the updation of the password\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value))\n    }\n      //executing the promises\n    Promise.all(promises)\n      .then(() => {\n        //redirecting to homepage\n        history.push(\"/\")\n      })\n      .catch(() => {\n        //handling the error\n        alert(\"Failed to update account\")\n      })\n      .finally(() => {\n        //enabling the update button\n        setLoading(false)\n      })\n  }\n\n  return (\n    <>\n    <Header />\n      <Card className=\"align-items-right\" style={{ height: '55vh',width:\"50vw\", marginLeft:\"25%\" }}>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          \n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n        </Card.Body>\n      </Card>\n      <Footer />\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}