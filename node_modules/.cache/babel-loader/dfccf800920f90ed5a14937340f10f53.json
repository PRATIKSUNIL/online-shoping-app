{"ast":null,"code":"import _slicedToArray from\"F:/online/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from\"react\";import{Form,Button,Card,Alert}from\"react-bootstrap\";import{useAuth}from\"../contexts/AuthContext\";import{Link,useHistory}from\"react-router-dom\";import Header from'./Header';import Footer from'./Footer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function UpdateProfile(){var emailRef=useRef();var passwordRef=useRef();var passwordConfirmRef=useRef();var _useAuth=useAuth(),currentUser=_useAuth.currentUser,updatePassword=_useAuth.updatePassword,updateEmail=_useAuth.updateEmail;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var history=useHistory();function handleSubmit(e){// this is to prevent reload of a page as reloading of a page is the default behavior\ne.preventDefault();// for the confirmation of the password\nif(passwordRef.current.value!==passwordConfirmRef.current.value){return alert(\"Passwords do not match\");}//promises handles the actions given to it\nvar promises=[];//disables the 'upload button'\nsetLoading(true);//for the updation of the email\nif(emailRef.current.value!==currentUser.email){promises.push(updateEmail(emailRef.current.value));}// for the updation of the password\nif(passwordRef.current.value){promises.push(updatePassword(passwordRef.current.value));}//executing the promises\nPromise.all(promises).then(function(){//redirecting to homepage\nhistory.push(\"/\");}).catch(function(){//handling the error\nalert(\"Failed to update account\");}).finally(function(){//enabling the update button\nsetLoading(false);});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Card,{className:\"align-items-right\",style:{height:'55vh',width:\"50vw\",marginLeft:\"25%\"},children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center mb-4\",children:\"Update Profile\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{id:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",ref:emailRef,required:true,defaultValue:currentUser.email})]}),/*#__PURE__*/_jsxs(Form.Group,{id:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",ref:passwordRef,placeholder:\"Leave blank to keep the same\"})]}),/*#__PURE__*/_jsxs(Form.Group,{id:\"password-confirm\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password Confirmation\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",ref:passwordConfirmRef,placeholder:\"Leave blank to keep the same\"})]}),/*#__PURE__*/_jsx(Button,{disabled:loading,className:\"w-100\",type:\"submit\",children:\"Update\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-100 text-center mt-2\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Cancel\"})})]})}),/*#__PURE__*/_jsx(Footer,{})]});}","map":{"version":3,"sources":["F:/online/src/components/UpdateProfile.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Link","useHistory","Header","Footer","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","currentUser","updatePassword","updateEmail","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","alert","promises","email","push","Promise","all","then","catch","finally","height","width","marginLeft"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport Header from './Header'\nimport Footer from './Footer'\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword, updateEmail } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    // this is to prevent reload of a page as reloading of a page is the default behavior\n    e.preventDefault()\n      // for the confirmation of the password\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return alert(\"Passwords do not match\")\n    }\n      //promises handles the actions given to it\n    const promises = []\n    //disables the 'upload button'\n    setLoading(true)\n  \n      //for the updation of the email\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value))\n    }\n    // for the updation of the password\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value))\n    }\n      //executing the promises\n    Promise.all(promises)\n      .then(() => {\n        //redirecting to homepage\n        history.push(\"/\")\n      })\n      .catch(() => {\n        //handling the error\n        alert(\"Failed to update account\")\n      })\n      .finally(() => {\n        //enabling the update button\n        setLoading(false)\n      })\n  }\n\n  return (\n    <>\n    <Header />\n      <Card className=\"align-items-right\" style={{ height: '55vh',width:\"50vw\", marginLeft:\"25%\" }}>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          \n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n        </Card.Body>\n      </Card>\n      <Footer />\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}